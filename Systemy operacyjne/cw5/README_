// Aleksander Pugowski 20.04.2022
// Program jest realizacja cwiczenia 4. Implementuje problem Producent-Konsument za pomocą potoków nienazwanych
// pomiędzy rodzicem a dzieckiem. Producent (dziecko) najpierw wczytuje informacje z pliku tekstowego do tablicy 
// znakow (buffer) za pomoca funkcji read, a nastepnie puszcza wczytany tekst w potok (funkcja write).
// Natomiast proces macierzysty najpierw wczytuje informacje z potoku do swojej kopii buffera, a nastepnie wpisuje 
// ją w plik wyjsciowy. Na koncu zarowno plik wejsciowy jak i plik wyjsciowy sa identyczne.


CWICZENIE 5: ´ Producent–Konsument: Potoki Nazwane
Przy pomocy potok´ow nazwanych systemu UNIX zaimplementowa´c problem ,,Producenta i Konsumenta” z ´cwiczenia 4.
(a) Utworzy´c potok FIFO z poziomu programu, a nast,
epnie uruchomi´c procesy Producenta i Konsumenta w tym samym programie (w procesie macierzystym i potomnym
lub w dw´och potomnych). Potok usuwa´c w funkcji zarejestrowanej przez atexit.
(b) Sprawdzi´c, ˙ze potoki FIFO dzia laj ,
a dla niezale˙znych proces´ow przez utworzenie
potoku FIFO z linii komend oraz uruchomienie proces´ow Producenta i Konsumenta
niezale˙znie z poziomu pow loki, np. w r´o˙znych terminalach – mo˙zna u˙zy´c polecenia:
xterm -hold -title nazwa okna -e nazwa programu &
dla ka˙zdego z tych proces´ow w pliku Makefile (jak te˙z tworzenie/usuwanie potoku).
