Plik zawiera 5 programow, kazdy na jedno zadanie z pliku cwiczeniowego. Nazwy programow odpowiadaja oznaczeniom polecen w pliku cwiczeniowym. Katalog zawiera rowniez drzewo genealogiczne, screenshot tego drzewa (w razie gdyby plik wygladal inaczej po otwarciu na innym komputerze) i podstawowy plik Makefile sluzacy do wywolania programow, czyszczenia zbednych plikow po wykonaniu i archiwizacji.

Autorem wszystkich plikow w katalogu jest Aleksander Pugowski, pliki powstaly na przelomie 16-17 marca 2022, poznymi nocnymi godzinami.

Polecenia do zadań:

CWICZENIE 1: ´ Procesy Potomne: fork
(a) Napisa´c program wypisuj ,
acy identyfikatory UID, GID, PID, PPID i PGID dla danego procesu.
(b) Wywo la´c funkcj,
e fork trzy razy (najlepiej w p,
etli for) i wypisa´c powy˙zsze identyfikatory dla procesu macierzystego oraz wszystkich proces´ow potomnych. Przy
pomocy funkcji wait sprawi´c, aby proces macierzysty zaczeka l na zako´nczenie
wszystkich proces´ow potomnych.
(c) Jak w (b), tylko przy u˙zyciu funkcji sleep (! nie u˙zywa´c funkcji wait) sprawia´c
by procesy potomne by ly adoptowane przez proces init lub systemd; poleceniem
pstree -p z poziomu pow loki wy´swietli´c drzewo proces´ow w danym systemie i
zidentyfikowa´c proces adoptuj ,
acy osierocone procesy.
(d) Jak w (b), tylko wstawi´c funkcj,
e sleep w takich miejscach programu, aby
procesy pojawia ly si ,
e na ekranie grupowane pokoleniami od najstarszego do
najm lodszego, a proces macierzysty ko´nczy l si ,
e dopiero po procesach potomnych
(! nie u˙zywa´c funkcji wait). Na podstawie wynik´ow programu sporz ,
adzi´c (w
pliku tekstowym) ,,drzewo genealogiczne” tworzonych proces´ow z zaznaczonymi
identyfikatorami PID, PPID i PGID.
(e) Jak w (b), tylko przy u˙zyciu fukcji setpgid sprawi´c by ka˙zdy proces potomny
stawa l si ,
e liderem swojej w lasnej grupy proces´ow.
! Ile proces´ow powstanie przy n-krotnym wywo laniu funkcji fork i dlaczego?
